apiVersion: apps/v1
kind: Deployment
metadata:
  name: taskcluster-queue-dependencyresolver
  labels:
    app.kubernetes.io/name: taskcluster-queue
    app.kubernetes.io/instance: '{{ .Release.Name }}'
    app.kubernetes.io/component: taskcluster-queue-dependencyresolver
    app.kubernetes.io/part-of: taskcluster
    app.kubernetes.io/managed-by: helm
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: taskcluster-queue
      app.kubernetes.io/instance: '{{ .Release.Name }}'
      app.kubernetes.io/component: taskcluster-queue-dependencyresolver
      app.kubernetes.io/part-of: taskcluster
      app.kubernetes.io/managed-by: helm
  replicas: {{ int (.Values.queue.procs.dependencyResolver.replicas) }}
  template:
    metadata:
      annotations:
        checksum/secret: '{{ include (print $.Template.BasePath "/taskcluster-queue-secret.yaml") . | sha256sum }}'
      labels:
        app.kubernetes.io/name: taskcluster-queue
        app.kubernetes.io/instance: '{{ .Release.Name }}'
        app.kubernetes.io/component: taskcluster-queue-dependencyresolver
        app.kubernetes.io/part-of: taskcluster
        app.kubernetes.io/managed-by: helm
    spec:
      serviceAccountName: taskcluster-queue
      containers:
        - name: taskcluster-queue
          image: '{{ .Values.dockerImage }}'
          imagePullPolicy: Always
          args:
            - queue/dependencyResolver
          resources:
            requests:
              cpu: '{{ .Values.queue.procs.dependencyResolver.cpu }}'
              memory: '{{ .Values.queue.procs.dependencyResolver.memory }}'
          env:
            - name: TASKCLUSTER_ROOT_URL
              value: '{{ .Values.rootUrl }}'
            - name: NODE_ENV
              value: production
          envFrom:
            - secretRef:
                name: taskcluster-queue
          ports: []
